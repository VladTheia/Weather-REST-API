version: '3'

services: 
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - './data:/data/db'
    networks: 
      - backend
  
  country_api:
    build: ./country_api
    image: country_api
    container_name: country_api
    volumes: 
      - ./country_api/src:/usr/app/src
      - ./models:/usr/app/models
    command: 'npm start'
    ports: 
      - '3000:3000'
    depends_on: 
      - 'mongo'
    networks: 
      - frontend
      - backend

  city_api:
    build: ./city_api
    image: city_api
    container_name: city_api
    volumes: 
      - ./city_api/src:/usr/app/src
      - ./models:/usr/app/models
    command: 'npm start'
    ports: 
      - '3001:3000'
    depends_on: 
      - 'mongo'
    networks: 
      - frontend
      - backend

  temp_api:
    build: ./temp_api
    image: temp_api
    container_name: temp_api
    volumes: 
      - ./temp_api/src:/usr/app/src
      - ./models:/usr/app/models
    command: 'npm start'
    ports: 
      - '3002:3000'
    depends_on: 
      - 'mongo'
    networks: 
      - frontend
      - backend

  reverse_proxy:
    image: nginx:1.17.10
    container_name: reverse_proxy
    depends_on: 
      - country_api
      - city_api
      - temp_api
    volumes: 
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
    ports: 
      - 8080:8080
    networks: 
      - frontend

  mongoclinet:
    image: mongoclient/mongoclient:4.0.0
    container_name: mongoclinet
    depends_on:
      - 'mongo'
    restart: 'always'
    ports: 
      - 8000:3000
    volumes: 
      - './data:/data/db'
    environment: 
      MONGO_URL: 'mongodb://mongo'
    networks: 
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge